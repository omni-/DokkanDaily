@page "/daily"
@using DokkanDaily.Components.Shared
@using DokkanDaily.Helpers
@using DokkanDaily.Models

<PageTitle>Dokkandle</PageTitle>

<h1>Dokkandle</h1>

<p>Today's challenge type is: @dailyType!</p>

@if(Executing)
{
    <BusySpinner />
}
else
{
    @if(dailyType == DailyType.LinkSkill)
    {
        <h3><b>Challenge!</b> defeat <b>@todaysStage.Name</b> using only units that have the <b>@linkSkill.Name</b> Link Skill! (Friend Unit excluded)</h3>
    }
    @if(dailyType == DailyType.Category)
    {
        <h3><b>Challenge!</b> defeat <b>@todaysStage.Name</b> using only units belonging to the <b>@category.Name</b> Category! (Friend Unit excluded)</h3>
    }
    @if(dailyType == DailyType.Character)
    {
        <h3><b>Challenge!</b> build a team using <b>[@leader.Title] @leader.Name</b> as the Leader!</h3>
    }
    @if (todaysStage != null && todaysStage.WallpaperImagePath != null)
    {
        <p>
            <img src="@todaysStage.WallpaperImagePath" />
        </p>
    }

    <footer style="position:fixed; bottom:0;">
        <p>Time until challenge resets: @hoursToReset hours</p>
    </footer>
}

@code {
    bool Executing { get; set; }

    Random Random => RNGHelper.GetDailySeed();

    DailyType dailyType { get; set; }

    Event todaysStage { get; set; }

    LinkSkill linkSkill { get; set; }

    Category category { get; set; }

    Unit leader { get; set; }

    int hoursToReset => 24 - DateTime.UtcNow.Hour;

    protected override void OnInitialized()
    {
        dailyType = RNGHelper.GetRandomDailyType(Random);
        todaysStage = RNGHelper.GetRandomStage(Random);
        linkSkill = RNGHelper.GetRandomLinkSkill(Random, todaysStage.Tier);
        category = RNGHelper.GetRandomCategory(Random, todaysStage.Tier);
        leader = RNGHelper.GetRandomLeader(Random); //, todaysStage.Tier);
        base.OnInitialized();
    }

}
