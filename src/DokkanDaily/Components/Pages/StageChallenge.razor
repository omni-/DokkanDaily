@page "/daily"
@rendermode InteractiveServer

@using DokkanDaily.Components.Shared
@using DokkanDaily.Constants
@using DokkanDaily.Helpers
@using DokkanDaily.Models;
@using DokkanDaily.Models.Dto
@using DokkanDaily.Models.Enums
@using DokkanDaily.Services.Interfaces

@inject IRngHelperService RngSvc
@inject IAzureBlobService BlobSvc
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<PageTitle>Dokkandle!</PageTitle>

<style>
    body {
        background: url('images/misc/wallpaper.jpg') fixed center no-repeat;
        background-size: cover;
        text-align: center;
        margin: 0 auto;
        overflow: hidden;
    }
</style>

<Logo dailyType="@todaysChallenge.DailyType.ToString()" />

@if(Executing)
{
    <BusySpinner />
}
else
{
    <div class="challenge-box">
        <div style="margin: 0 1em 0 1em">
            @if (todaysChallenge.DailyType == DailyType.LinkSkill)
            {
                <p class="challenge-text"><b>Challenge!</b> defeat <b>@todaysChallenge.TodaysEvent.Name</b>, <b>Stage @todaysChallenge.TodaysEvent.Stage</b> using only units that have the Link Skill <div class="dokkan-link-wrapper"><div class="dokkan-link"><div class="text">@todaysChallenge.LinkSkill.Name</div></div></div><div class="challenge-text friend-text">(Friend Unit excluded)</div></p>
            }
            @if (todaysChallenge.DailyType == DailyType.Category)
            {
                <p class="challenge-text"><b>Challenge!</b> defeat <b>@todaysChallenge.TodaysEvent.Name</b>, <b>Stage @todaysChallenge.TodaysEvent.Stage</b> using only units belonging to:<br /><img src="@todaysChallenge.Category.ImageURL" /><div class="challenge-text friend-text">(Friend Unit excluded)</div></p>
            }
            @if (todaysChallenge.DailyType == DailyType.Character)
            {
                <p class="challenge-text"><b>Challenge!</b> build a team using <img style="width:3em;height:auto;" src="@todaysChallenge.TodaysUnit.ImageURL" /> <b style="color:@typeColor">[@todaysChallenge.Leader.Title] @todaysChallenge.Leader.Name</b> as the Leader and defeat <b>@todaysChallenge.TodaysEvent.Name</b>, <b>Stage @todaysChallenge.TodaysEvent.Stage</b>!</p>
            }
            @if (todaysChallenge.TodaysEvent != null && todaysChallenge.TodaysEvent.WallpaperImagePath != null)
            {
                <p>
                    <img style="width:88%;height:20%;border:solid;margin-top:2em;" src="@todaysChallenge.TodaysEvent.BannerImagePath" />
                </p>
            }
            <div class="clear-box">
                <p>@dailyFileCount clear(s) uploaded today</p>
                <button type="button" class="btn btn-secondary btn-lg" @onclick=OnClick>
                    Go to clears
                </button>
            </div>
        </div>
    </div>

    <Footer />
}

@code {
    Challenge todaysChallenge;

    bool Executing { get; set; }

    string typeColor => DDConstants.TypeToHexMap[todaysChallenge.TodaysUnit.DokkanType];

    int dailyFileCount = 0;

    protected override async Task OnInitializedAsync()
    {
        todaysChallenge = RngSvc.GetDailyChallenge();

        try
        {
            dailyFileCount = await BlobSvc
                .GetFileCountForTag(DDHelper.GetUtcNowDateTag())
                .ConfigureAwait(false);
        }
        catch { }

        base.OnInitialized();
    }

    void OnClick()
    {
        NavManager.NavigateTo("/clears", false);
    }
}
